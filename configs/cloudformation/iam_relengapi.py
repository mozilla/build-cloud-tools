# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

from cfn_pyplates.core import CloudFormationTemplate, Resource
from cfn_pyplates.core import Properties, options
from utils import policy

is_prod = options['prod']

cft = CloudFormationTemplate(
    description="IAM for RelengAPI" if is_prod else "IAM For RelengAPI Staging")

# production

# RelengAPI is configured with an access/secret keypair for these users, but
# that keypair is not created here; it is generated via the console once the
# stack is deployed.

# Note that you cannot control the physical name of the users; they are ugly
# autogenerated names.  See
# http://stackoverflow.com/questions/16185109/how-to-set-user-name-and-group-name-in-iam-using-cloudformation

name = 'RelengAPI' if is_prod else 'RelengAPIStage'


def object_arn(rgn):
    return bucket_arn(rgn) + '/*'


def bucket_arn(rgn):
    if is_prod:
        return "arn:aws:s3:::mozilla-releng-%s-tooltool" % rgn
    else:
        return "arn:aws:s3:::mozilla-releng-staging-%s-tooltool" % rgn

cft.resources.add(Resource(
    name, 'AWS::IAM::User',
    Properties({
        'Policies': [
            policy("tooltoolbucketaccess", {
                "Effect": "Allow",
                "Action": [
                    "s3:ListBucket",
                    "s3:ListBucketMultipartUploads",
                    "s3:ListBucketVersions",
                ],
                "Resource": [
                    bucket_arn('use1'),
                    bucket_arn('usw1'),
                    bucket_arn('usw2')
                ]
            }),
            policy("tooltoolobjectaccess", {
                "Effect": "Allow",
                "Action": [
                    "s3:AbortMultipartUpload",
                    "s3:DeleteObject",
                    "s3:DeleteObjectVersion",
                    "s3:GetObject",
                    "s3:GetObjectAcl",
                    "s3:GetObjectTorrent",
                    "s3:GetObjectVersion",
                    "s3:GetObjectVersionAcl",
                    "s3:GetObjectVersionTorrent",
                    "s3:ListMultipartUploadParts",
                    "s3:PutObject",
                    "s3:PutObjectAcl",
                    "s3:PutObjectVersionAcl",
                    "s3:RestoreObject"
                ],
                "Resource": [
                    object_arn('use1'),
                    object_arn('usw1'),
                    object_arn('usw2')
                ]
            }),
        ]
    })
))
